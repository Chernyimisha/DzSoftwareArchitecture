package DZ4.onlineTicket;

import java.util.Date;

/**
 * Компонент: BusTicket
 * Версия: 1.1.1
 *
 * Описание: Этот компонент описывает класс BusTicket, наследующий свойства компонента Ticket
 * и содержит поля: номер билета, номер маршрута, время отправления, цена. Также класс BusTicket
 * реализует методы интерфейса TicketAction.
 *
 * Изменения:
 * - 1.0.0: Первая версия.
 * - 1.1.0: Добавлена поддержка новой функциональности.
 * - 1.1.1: Добавлены комментарии к методам.
 */

class BusTicket extends Ticket {

    int number;
    String routeId;
    Date departureTime;
    double price;

    /**
     * Подтверждение покупки билета.
     *
     * @return true, если списание средств успешно, false в противном случае.
     * @pre User Успешное списание средств.
     * @post Покупка подтверждена.
     * <p>
     * Этот метод позволяет подтвердить факт покупки билета пользователем.
     * Для успешного подтверждения покупки билета необходимо выполнение следующих условий:
     * - У пользователя должно успешным списание средств.
     * <p>
     * Если все предусловия выполняются, то покупка билета будет подтверждена и метод вернет true.
     * В противном случае покупка билета не будет подтверждена, и метод вернет false.
     */

    @Override
    public boolean confirmPurchase() {
        // Реализация метода
        return false;
    }

    /**
     * Обновление данных о наличии билетов.
     *
     * @pre User должен выбрать маршрут и дату.
     * @post Обновление данных о наличии билетов по выбранному маршруту на указанную дату.
     * <p>
     * Этот метод позволяет обновить данные о наличии билетов.
     * Для успешного обновления данных о наличии билетов необходимо выполнение следующих условий:
     * - Пользователь должен выбрать маршрут и дату.
     * <p>
     */
    @Override
    public void updateTicketAvailability() {
        // Реализация метода
    }

    /**
     * Метод отмены бронирования.
     *
     * @pre User должен забронировать билет.
     * @pre Выполнены условия для отмены бронирования.
     * @post Отмена бронирования.
     * <p>
     * Этот метод позволяет отменить бронь.
     * Для успешной отмены бронирования билета необходимо выполнение следующих условий:
     * - Пользователь должен забронировать билет.
     * - Пользователь должен выполнить условия для отмены бронирования.
     * <p>
     * Если все предусловия выполняются, то отмена бронирования будет выполнена и метод вернет true.
     * В противном случае метод вернет false.
     */
    @Override
    public boolean cancelReservation() {
        // Реализация метода
        return false;
    }



}
